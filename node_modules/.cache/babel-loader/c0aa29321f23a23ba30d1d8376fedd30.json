{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\DashboardDAPP\\\\src\\\\Users.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const [users, setUsers] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setUsers(null); // loading 상태를 true 로 바꿉니다.\n\n        setLoading(true);\n        const response = await axios.get('https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso');\n        setUsers([response.data]); // 데이터는 response.data 안에 들어있습니다.\n      } catch (e) {\n        setError(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchUsers();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Can't load data from server\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  if (!users) return null;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: user.volume_24h_usd\n    }, user.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Users, \"tq8fu1gobXtE39DyM7UStpaQx7k=\");\n\n_c = Users;\n\nfunction Users2() {\n  _s2();\n\n  const [users2, setUsers2] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers2 = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setUsers2(null); // loading 상태를 true 로 바꿉니다.\n\n        setLoading(true);\n        const response = await axios.get('https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso');\n        setUsers2([response.data]); // 데이터는 response.data 안에 들어있습니다.\n      } catch (e) {\n        setError(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchUsers2();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Can't load data from server\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  if (!users2) return null;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users2.map(user2 => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: user2.liquidity_usd\n    }, user2.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(Users2, \"rnOS8bDTdc9zd1Nokrd+cHDh97w=\");\n\n_c2 = Users2;\n\nfunction Users3() {\n  _s3();\n\n  const [users3, setUsers3] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers3 = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setUsers3(null); // loading 상태를 true 로 바꿉니다.\n\n        setLoading(true);\n        const response = await axios.get('https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso');\n        setUsers3([response.data]); // 데이터는 response.data 안에 들어있습니다.\n      } catch (e) {\n        setError(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchUsers3();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Can't load data from server\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 23\n  }, this);\n  if (!users3) return null;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users3.map(user3 => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: user3.price_usd * 1000\n    }, user3.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(Users3, \"Hwo5w5z28gUqc7j+8oUh2Jaz0Uo=\");\n\n_c3 = Users3;\n\nfunction Users4() {\n  _s4();\n\n  const [users4, setUsers4] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers4 = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setUsers4(null); // loading 상태를 true 로 바꿉니다.\n\n        setLoading(true);\n        const response = await axios.get('https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso');\n        setUsers4([response.data]); // 데이터는 response.data 안에 들어있습니다.\n      } catch (e) {\n        setError(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchUsers4();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Can't load data from server\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 23\n  }, this);\n  if (!users4) return null;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users4.map(user4 => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: user4.price_usd * 1000000000\n    }, user4.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 7\n  }, this);\n}\n\n_s4(Users4, \"tBPNuuvc5TO8PWfYZcynXAoyzWk=\");\n\n_c4 = Users4;\nexport { Users, Users2, Users3, Users4 };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Users\");\n$RefreshReg$(_c2, \"Users2\");\n$RefreshReg$(_c3, \"Users3\");\n$RefreshReg$(_c4, \"Users4\");","map":{"version":3,"sources":["C:/Users/user/Desktop/새 폴더/DashboardDAPP/src/Users.js"],"names":["React","useState","useEffect","axios","Users","users","setUsers","loading","setLoading","error","setError","fetchUsers","response","get","data","e","map","user","volume_24h_usd","address","Users2","users2","setUsers2","fetchUsers2","user2","liquidity_usd","Users3","users3","setUsers3","fetchUsers3","user3","price_usd","Users4","users4","setUsers4","fetchUsers4","user4"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n\nfunction Users() {\n  const [users, setUsers] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setUsers(null);\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true);\n        const response = await axios.get(\n          'https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso'\n        );\n        setUsers([response.data]); // 데이터는 response.data 안에 들어있습니다.\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    };\n\n    fetchUsers();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Can't load data from server</div>;\n  if (!users) return null;\n  return (\n    <ul>\n      {users.map(user => (\n        <li key={user.address}>\n          {user.volume_24h_usd}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Users2() {\n    const [users2, setUsers2] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      const fetchUsers2 = async () => {\n        try {\n          // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n          setError(null);\n          setUsers2(null);\n          // loading 상태를 true 로 바꿉니다.\n          setLoading(true);\n          const response = await axios.get(\n            'https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso'\n          );\n          setUsers2([response.data]); // 데이터는 response.data 안에 들어있습니다.\n        } catch (e) {\n          setError(e);\n        }\n        setLoading(false);\n      };\n  \n      fetchUsers2();\n    }, []);\n  \n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Can't load data from server</div>;\n    if (!users2) return null;\n    return (\n      <ul>\n        {users2.map(user2 => (\n          <li key={user2.address}>\n            {user2.liquidity_usd}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  function Users3() {\n    const [users3, setUsers3] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      const fetchUsers3 = async () => {\n        try {\n          // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n          setError(null);\n          setUsers3(null);\n          // loading 상태를 true 로 바꿉니다.\n          setLoading(true);\n          const response = await axios.get(\n            'https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso'\n          );\n          setUsers3([response.data]); // 데이터는 response.data 안에 들어있습니다.\n        } catch (e) {\n          setError(e);\n        }\n        setLoading(false);\n      };\n  \n      fetchUsers3();\n    }, []);\n  \n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Can't load data from server</div>;\n    if (!users3) return null;\n    return (\n      <ul>\n        {users3.map(user3 => (\n          <li key={user3.address}>\n            {user3.price_usd*1000}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n\n\n  function Users4() {\n    const [users4, setUsers4] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      const fetchUsers4 = async () => {\n        try {\n          // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n          setError(null);\n          setUsers4(null);\n          // loading 상태를 true 로 바꿉니다.\n          setLoading(true);\n          const response = await axios.get(\n            'https://api.dev.dex.guru/v1/chain/56/tokens/0x75e457c1AD98bCC78ae676E9a87A324807475B6b/market?api-key=O0E2up_-tAetzJwjWtYo9sUnibaw0oXFKVS69ywMtso'\n          );\n          setUsers4([response.data]); // 데이터는 response.data 안에 들어있습니다.\n        } catch (e) {\n          setError(e);\n        }\n        setLoading(false);\n      };\n  \n      fetchUsers4();\n    }, []);\n  \n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Can't load data from server</div>;\n    if (!users4) return null;\n    return (\n      <ul>\n        {users4.map(user4 => (\n          <li key={user4.address}>\n            {user4.price_usd*1000000000}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n\n\n  export {Users, Users2, Users3, Users4};"]},"metadata":{},"sourceType":"module"}